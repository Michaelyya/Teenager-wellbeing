{"ast":null,"code":"const API_URL = \"http://127.0.0.1:5000\";\nexport const sendMessageToChatbot = async (message, preferences = {}) => {\n  try {\n    const response = await fetch(`${API_URL}/chat`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message,\n        preferences\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      console.error(\"Server error details:\", errorData);\n      throw new Error(`HTTP error! Status: ${response.status}. Details: ${errorData.error || 'Unknown error'}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error sending message to chatbot:\", error);\n    return {\n      response: \"Sorry, there was an error communicating with the chatbot.\"\n    };\n  }\n};\nexport const savePreferencesToBackend = async preferences => {\n  try {\n    const response = await fetch('http://localhost:5000/preferences', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(preferences)\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error saving preferences to backend:', error);\n    return {\n      status: 'error',\n      message: \"Failed to save preferences\"\n    };\n  }\n};","map":{"version":3,"names":["API_URL","sendMessageToChatbot","message","preferences","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","console","error","Error","status","savePreferencesToBackend"],"sources":["/Users/xishengzhang/Desktop/Teenager-wellbeing/frontend/chat-box/src/connector.js"],"sourcesContent":["const API_URL = \"http://127.0.0.1:5000\"; \n\nexport const sendMessageToChatbot = async (message, preferences = {}) => {\n    try {\n        const response = await fetch(`${API_URL}/chat`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                message,\n                preferences\n            }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error(\"Server error details:\", errorData);\n            throw new Error(`HTTP error! Status: ${response.status}. Details: ${errorData.error || 'Unknown error'}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error sending message to chatbot:\", error);\n        return { response: \"Sorry, there was an error communicating with the chatbot.\" };\n    }\n}\n\nexport const savePreferencesToBackend = async (preferences) => {\n    try {\n        const response = await fetch('http://localhost:5000/preferences', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(preferences),\n        });\n\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error('Error saving preferences to backend:', error);\n        return { status: 'error', message: \"Failed to save preferences\" };\n    }\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,OAAO,EAAEC,WAAW,GAAG,CAAC,CAAC,KAAK;EACrE,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,OAAO,EAAE;MAC5CM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBR,OAAO;QACPC;MACJ,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvCC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEH,SAAS,CAAC;MACjD,MAAM,IAAII,KAAK,CAAC,uBAAuBZ,QAAQ,CAACa,MAAM,cAAcL,SAAS,CAACG,KAAK,IAAI,eAAe,EAAE,CAAC;IAC7G;IAEA,OAAO,MAAMX,QAAQ,CAACS,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,OAAO;MAAEX,QAAQ,EAAE;IAA4D,CAAC;EACpF;AACJ,CAAC;AAED,OAAO,MAAMc,wBAAwB,GAAG,MAAOf,WAAW,IAAK;EAC3D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;IACpC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIK,KAAK,CAAC,6BAA6B,CAAC;IAClD;IAEA,OAAO,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,OAAO;MAAEE,MAAM,EAAE,OAAO;MAAEf,OAAO,EAAE;IAA6B,CAAC;EACrE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}